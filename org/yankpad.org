* org-mode
** uml: uml snippet
   #+BEGIN_SRC plantuml :file $1
   $0
   #+END_SRC
** prop: property snippet
   :PROPERTIES:
   :INCLUDE: $1
   :END:
   $0
* js2-mode
** require snippets                                                             :snippetlist:
   - rp :: const Page = require("yunos/page/Page");
   - rv :: const View = require("yunos/ui/view/View");
   - ri :: const ImageView = require("yunos/ui/view/ImageView");
   - rt :: const TextView = require("yunos/ui/view/TextView");
   - rcv :: const CompositeView = require("yunos/ui/view/CompositeView");
   - rlr :: const RelativeLayout = require("yunos/ui/layout/RelativeLayout");
   - rs :: const Screen = require("yunos/device/Screen").getInstance();
   - rr :: const Resource = require("yunos/content/resource/Resource").getInstance();
   - rlog :: const logger = log("$0");
** if: if clause
    if ($1) {
        $2
    } $3
    $0
** el: else clause
   else {
       $1
   }
   $0
** elif: else if clause
   else if ($1) {
       $2
   } $3
   $0
** getWindowConfig: default getWindowConfig impl
   getWindowConfig() {
        let newConfig = this.pageapi.mainWindow.adjustWindowConfig({
            width: Screen.widthPixels,
            height: Screen.heightPixels,
            x: 0,
            y: 0
        });

        return {
            left: newConfig.x,
            top: newConfig.y + STATUSBAR_HEIGHT,
            width: newConfig.width,
            height: newConfig.height - STATUSBAR_HEIGHT,
            type: 5,
            opaque: false
        };
    }
** cpus: start cpuprofile
   process.startCPUProfile("$1");
   $0
** cpup: stop cpuprofile
   process.stopCPUProfile("$1", "/opt/data/root/$2/$3.cpuprofile");
   $0
** arr: =>
   ($1) => {
       $2
   }$0
** try: try clause
   try {
       $1
   } catch (e) {
       logger.E("error occurred: ", e.toString());
   }
   $0
** lge: log error
   logger.E("$1");$0
** lgw: log warning
   logger.W("$1");$0
** lgi: log info
   logger.I("$1");$0
** lgd: log debug
   logger.D("$1");$0
** lgv: log verbose
   logger.V("$1");$0
* web-mode
  :PROPERTIES:
  :INCLUDE: js2-mode
  :END:
* Default                                           :global:
** bugid: Commit comment
   BugID:$1:$2

   Root Cause:$3
   Solution:$4
   Test Suggestion:Test all the cases related
   $0
